<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tags on 数星</title>
    <link>https://ousct.xyz/tags/</link>
    <description>Recent content in Tags on 数星</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 18 Jul 2019 19:27:34 +0800</lastBuildDate>
    
        <atom:link href="https://ousct.xyz/tags/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mac OS 开启32位编译支持</title>
      <link>https://ousct.xyz/2020/05/mac-os-enable-32bit-lib/</link>
      <pubDate>Wed, 13 May 2020 10:10:12 +0800</pubDate>
      
      <guid>https://ousct.xyz/2020/05/mac-os-enable-32bit-lib/</guid>
      <description>做CMU-15-213的Lab的过程中发现，我在Mac OS下用make命令编译源代码会出错，错误如下： ld: symbol(s) not found for architecture i386 clang: error: linker command failed with exit code 1 (use -v to</description>
    </item>
    
    <item>
      <title>Mac OS开启NTFS分区的索引</title>
      <link>https://ousct.xyz/2020/02/mac-os-enable-ntfs-indexing/</link>
      <pubDate>Fri, 21 Feb 2020 13:15:38 +0800</pubDate>
      
      <guid>https://ousct.xyz/2020/02/mac-os-enable-ntfs-indexing/</guid>
      <description>安装Alfred之后发现搜索不到ntfs分区上的文件，后来发现Alfred文件搜索实际上是调用Spotlight，因此只要spotlight</description>
    </item>
    
    <item>
      <title>一招搞定95%的二分算法题</title>
      <link>https://ousct.xyz/2019/07/2019-07-18-dichotomy/</link>
      <pubDate>Thu, 18 Jul 2019 19:27:34 +0800</pubDate>
      
      <guid>https://ousct.xyz/2019/07/2019-07-18-dichotomy/</guid>
      <description>二分算法的本质 我们经常把二分和单调性联系起来，实际上，二分和单调性并不是直接相关的。或者说，具有单调性的问题可以用二分来解决，而二分并不是只</description>
    </item>
    
    <item>
      <title>Numpy备忘录</title>
      <link>https://ousct.xyz/2018/09/2018-09-23-numpy-memo/</link>
      <pubDate>Wed, 12 Sep 2018 19:54:42 +0800</pubDate>
      
      <guid>https://ousct.xyz/2018/09/2018-09-23-numpy-memo/</guid>
      <description>一、矩阵创建 1. 从python list创建： &amp;gt;&amp;gt;&amp;gt; import numpy as np &amp;gt;&amp;gt;&amp;gt; np.array([1,2,3]) array([1, 2, 3]) 2. 创建指定维度的矩阵 &amp;gt;&amp;gt;&amp;gt; np.ndarray([3,3]) array([[6.91547902e-310, 6.91547902e-310, 3.24515130e-109], [1.33360310e+241, 1.84714205e+241, 3.50129306e-311], [1.93049258e+241, 3.50129306e-311, 1.97869600e-293]]) 注意到此时的矩阵元素并没有被初始化为</description>
    </item>
    
    <item>
      <title>软件工程中的形式化方法小结</title>
      <link>https://ousct.xyz/1/01/2019-06-21-formal-methods-in-software-engineering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ousct.xyz/1/01/2019-06-21-formal-methods-in-software-engineering/</guid>
      <description>什么是形式化方法？ 形式化方法企图以数学的方式来描述软件系统，从而保证软件的正确性。 数学是准确的建模媒体，能够对现象、对象、动作等进行简洁、准</description>
    </item>
    
  </channel>
</rss>
